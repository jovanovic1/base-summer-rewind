import { __decorate, __metadata } from 'tslib';
import { DEFAULT_CHAIN } from '../utils/constants.js';
import { gasPricesValidator } from '../types/utils/gasPrices.js';
import { CodegenEthMainnetGasPricesDocument } from '../graphql/generatedTypes.js';
import { weiToGwei } from '../utils/helpers.js';
import { ValidateInput } from '../../lib/validation/ValidateInput.js';
import { modifyQueryForChain } from '../graphql/modifyQueryForChain.js';

class UtilsController {
    constructor(client, defaultChain = DEFAULT_CHAIN) {
        this.client = client;
        this.defaultChain = defaultChain;
    }
    async getGasPrices(variables) {
        const { chain, ...queryVariables } = variables;
        const returnInGwei = variables.returnInGwei || false;
        const userChain = chain || this.defaultChain;
        const query = modifyQueryForChain(userChain, CodegenEthMainnetGasPricesDocument);
        const result = await this.client.query({
            query: query,
            variables: queryVariables,
        });
        const gasPrices = result?.data?.[userChain]?.gasPrices;
        if (Array.isArray(gasPrices) && gasPrices.length > 0) {
            if (returnInGwei) {
                const fieldsToTransform = [
                    'total',
                    'average',
                    'ceiling',
                    'floor',
                    'median',
                ];
                const modifiedGasPrices = gasPrices.map((gasPrice) => {
                    fieldsToTransform.map((field) => {
                        gasPrice[field] = weiToGwei(gasPrice[field]);
                    });
                    return gasPrice;
                });
                return { gasPrices: modifiedGasPrices };
            }
            return { gasPrices };
        }
        return { gasPrices: [] };
    }
}
__decorate([
    ValidateInput(gasPricesValidator),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UtilsController.prototype, "getGasPrices", null);

export { UtilsController };
